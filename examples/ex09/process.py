#!/usr/bin/env python3
"""
process data generated by PageBuilder
"""

import json

INFN  = "document.json"
OUTFN = "_DATA.json"



print ("PROCESSING ===========================================================")

########################################################################
## READING THE INPUT FILE
print ("reading", INFN)
with open(INFN, "r") as f: document_json = f.read()
print ("parsing", INFN)
document_data = json.loads(document_json)
print ("analysing {} ({} records)".format(INFN, len(document_data)))

data = []
FIELDS = ["_filename", "data"]
for r in document_data:
    data.append({ k: r.get(k, None) for k in FIELDS})

print ("extracted {} records".format(len(data)))
print ("EXTRACTED DATA:", data)


########################################################################
## PROCESSING
out_sums = {}

for i in range(len(data)):
    d = data[i]
    sdata = d['data'].split(",")
    sdata = map(int, sdata)
    out_sums[d["_filename"]] = {"sum": sum(sdata)}


########################################################################
## WRITING THE OUTPUT FILE
out = {
    "_select": out_sums,
        # the key `_select` is special; it MUST contain a dict where the
        # dict keys are the filename (from the `_filename` field); when
        # a specific file `filename` is processed, the content of
        # out["_select"][filename] (which must be a dict) is added to
        # the environment, and can be added in the template
    #"sums": 1,
}
with open(OUTFN, "w") as f: f.write(json.dumps(out))
print("OUT:", out)


print ("END PROCESSING =======================================================")
